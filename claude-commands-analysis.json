{
  "analysis_metadata": {
    "generated_date": "2025-07-14T12:00:00Z",
    "total_commands": 31,
    "analysis_scope": "Active Claude Commands in .claude/commands/",
    "author": "Claude Code Analysis",
    "repository": "devops_tf_templates"
  },
  "command_analysis": [
    {
      "command": "/benchmark",
      "category": "Performance Analysis",
      "complexity": 4,
      "usage_frequency": "Weekly",
      "primary_function": "Comprehensive performance analysis and optimization",
      "technologies": ["Rust", "Go", "Java", "Deno", "Prometheus", "Grafana"],
      "overlaps": ["/optimize", "/monitor", "/pipeline-optimize"],
      "automation_level": "High",
      "description": "Multi-language performance benchmarking with hyperfine, JMH, and custom profiling tools",
      "implementation_type": "Bash + Python scripts",
      "dependency_count": 8,
      "security_relevant": false
    },
    {
      "command": "/ci-setup",
      "category": "CI/CD Infrastructure",
      "complexity": 5,
      "usage_frequency": "Monthly",
      "primary_function": "Complete CI/CD pipeline generation",
      "technologies": ["GitHub Actions", "GitLab CI", "Azure DevOps", "Terraform"],
      "overlaps": ["/deploy", "/gitops-sync", "/pipeline-optimize"],
      "automation_level": "Very High",
      "description": "Multi-platform CI/CD pipeline generation with security scanning and deployment automation",
      "implementation_type": "Template generation + YAML",
      "dependency_count": 12,
      "security_relevant": true
    },
    {
      "command": "/containerize",
      "category": "Infrastructure",
      "complexity": 4,
      "usage_frequency": "Weekly",
      "primary_function": "Production-ready containerization",
      "technologies": ["Docker", "Kubernetes", "Helm", "Multi-stage builds"],
      "overlaps": ["/deploy", "/harden", "/optimize"],
      "automation_level": "High",
      "description": "Multi-stage Docker builds with security hardening and Kubernetes optimization",
      "implementation_type": "Template generation",
      "dependency_count": 6,
      "security_relevant": true
    },
    {
      "command": "/debug",
      "category": "Development Support",
      "complexity": 3,
      "usage_frequency": "Daily",
      "primary_function": "Multi-language debugging assistance",
      "technologies": ["Java", "Go", "Rust", "Deno", "Fresh", "TypeScript"],
      "overlaps": ["/log-trace", "/monitor"],
      "automation_level": "Medium",
      "description": "Language-specific debugging strategies and error analysis",
      "implementation_type": "Command framework",
      "dependency_count": 4,
      "security_relevant": false
    },
    {
      "command": "/dependencies",
      "category": "Development Support",
      "complexity": 4,
      "usage_frequency": "Weekly",
      "primary_function": "Dependency analysis and coupling patterns",
      "technologies": ["Multiple languages", "Package managers", "Static analysis"],
      "overlaps": ["/security-audit", "/validate"],
      "automation_level": "High",
      "description": "Comprehensive dependency mapping, risk analysis, and coupling assessment",
      "implementation_type": "Analysis scripts",
      "dependency_count": 10,
      "security_relevant": true
    },
    {
      "command": "/deploy",
      "category": "Infrastructure",
      "complexity": 3,
      "usage_frequency": "Daily",
      "primary_function": "Kubernetes deployment automation",
      "technologies": ["Kubernetes", "Kustomize", "Helm", "Docker"],
      "overlaps": ["/containerize", "/gitops-sync", "/monitor"],
      "automation_level": "High",
      "description": "Automated Kubernetes deployment with manifest generation and secret management",
      "implementation_type": "Kubernetes manifests",
      "dependency_count": 5,
      "security_relevant": true
    },
    {
      "command": "/generate-resource",
      "category": "Infrastructure",
      "complexity": 5,
      "usage_frequency": "Weekly",
      "primary_function": "Terraform resource template generation",
      "technologies": ["Terraform", "AWS", "Azure", "GCP", "Terratest"],
      "overlaps": ["/terraform-validate", "/security-audit", "/harden"],
      "automation_level": "Very High",
      "description": "Intelligent Terraform resource scaffolding with security best practices and testing",
      "implementation_type": "Template engine",
      "dependency_count": 15,
      "security_relevant": true
    },
    {
      "command": "/gitops-sync",
      "category": "CI/CD Infrastructure",
      "complexity": 5,
      "usage_frequency": "Daily",
      "primary_function": "GitOps workflow with drift detection",
      "technologies": ["ArgoCD", "Flux", "Terraform", "Atlantis", "Kubernetes"],
      "overlaps": ["/terraform-validate", "/incident-response", "/monitor"],
      "automation_level": "Very High",
      "description": "Advanced GitOps synchronization with 4-Augen-Prinzip and automated remediation",
      "implementation_type": "Python engine + YAML",
      "dependency_count": 18,
      "security_relevant": true
    },
    {
      "command": "/harden",
      "category": "Security",
      "complexity": 4,
      "usage_frequency": "Weekly",
      "primary_function": "Multi-layer security hardening",
      "technologies": ["Docker", "Kubernetes", "Go", "Rust", "Java", "Spring"],
      "overlaps": ["/security-audit", "/containerize", "/validate"],
      "automation_level": "High",
      "description": "Proactive security implementation across containers, applications, and infrastructure",
      "implementation_type": "Security templates",
      "dependency_count": 12,
      "security_relevant": true
    },
    {
      "command": "/incident-response",
      "category": "Operations",
      "complexity": 5,
      "usage_frequency": "Monthly",
      "primary_function": "Automated incident response orchestration",
      "technologies": ["Prometheus", "AlertManager", "PagerDuty", "Slack", "Python"],
      "overlaps": ["/monitor", "/log-trace", "/gitops-sync"],
      "automation_level": "Very High",
      "description": "Intelligent incident triage with auto-remediation and Claude Code integration",
      "implementation_type": "Python orchestrator",
      "dependency_count": 20,
      "security_relevant": true
    },
    {
      "command": "/log-trace",
      "category": "Operations",
      "complexity": 4,
      "usage_frequency": "Daily",
      "primary_function": "Distributed tracing and log correlation",
      "technologies": ["OpenTelemetry", "Jaeger", "Elasticsearch", "Fluentd"],
      "overlaps": ["/monitor-setup", "/debug", "/incident-response"],
      "automation_level": "High",
      "description": "Advanced log correlation with distributed tracing and Claude Code session tracking",
      "implementation_type": "Python engine + configs",
      "dependency_count": 16,
      "security_relevant": false
    },
    {
      "command": "/monitor-setup",
      "category": "Operations",
      "complexity": 5,
      "usage_frequency": "Monthly",
      "primary_function": "Comprehensive monitoring infrastructure setup",
      "technologies": ["OpenTelemetry", "Prometheus", "Grafana", "CloudWatch", "Azure Monitor"],
      "overlaps": ["/monitor", "/log-trace", "/incident-response"],
      "automation_level": "Very High",
      "description": "Multi-platform observability stack with Claude Code telemetry integration",
      "implementation_type": "Config templates + scripts",
      "dependency_count": 22,
      "security_relevant": false
    },
    {
      "command": "/monitor",
      "category": "Operations",
      "complexity": 4,
      "usage_frequency": "Weekly",
      "primary_function": "Observability and alerting systems",
      "technologies": ["Prometheus", "Grafana", "Loki", "Vector", "OpenTelemetry"],
      "overlaps": ["/monitor-setup", "/log-trace", "/benchmark"],
      "automation_level": "High",
      "description": "Golden signals monitoring with hierarchical dashboards and smart alerting",
      "implementation_type": "Framework + templates",
      "dependency_count": 14,
      "security_relevant": false
    },
    {
      "command": "/optimize",
      "category": "Performance Analysis",
      "complexity": 3,
      "usage_frequency": "Weekly",
      "primary_function": "Code performance optimization",
      "technologies": ["Multiple languages", "Profiling tools"],
      "overlaps": ["/benchmark", "/pipeline-optimize"],
      "automation_level": "Medium",
      "description": "Performance analysis and optimization suggestions for application code",
      "implementation_type": "Analysis framework",
      "dependency_count": 5,
      "security_relevant": false
    },
    {
      "command": "/pipeline-optimize",
      "category": "CI/CD Infrastructure",
      "complexity": 4,
      "usage_frequency": "Weekly",
      "primary_function": "CI/CD pipeline performance optimization",
      "technologies": ["GitHub Actions", "GitLab CI", "Azure DevOps", "Python"],
      "overlaps": ["/ci-setup", "/benchmark", "/monitor"],
      "automation_level": "High",
      "description": "Pipeline performance analysis with automated optimization patches",
      "implementation_type": "Python analyzer + patches",
      "dependency_count": 8,
      "security_relevant": false
    },
    {
      "command": "/plan",
      "category": "Task Management",
      "complexity": 4,
      "usage_frequency": "Daily",
      "primary_function": "Comprehensive project planning with task integration",
      "technologies": ["Git", "Markdown", "Task framework"],
      "overlaps": ["/task-create", "/task-update", "/task-list"],
      "automation_level": "High",
      "description": "Hierarchical project planning with integrated task management and git workflows",
      "implementation_type": "Planning framework",
      "dependency_count": 3,
      "security_relevant": false
    },
    {
      "command": "/security-audit",
      "category": "Security",
      "complexity": 5,
      "usage_frequency": "Weekly",
      "primary_function": "Multi-layer security audits",
      "technologies": ["Checkov", "TFSec", "Gitleaks", "TruffleHog", "Various scanners"],
      "overlaps": ["/harden", "/tf-security-scan", "/validate"],
      "automation_level": "Very High",
      "description": "Comprehensive SAST/DAST security scanning with compliance reporting",
      "implementation_type": "Multi-tool integration",
      "dependency_count": 18,
      "security_relevant": true
    },
    {
      "command": "/task-archive",
      "category": "Task Management",
      "complexity": 2,
      "usage_frequency": "Weekly",
      "primary_function": "Task archival and cleanup",
      "technologies": ["File system", "Markdown"],
      "overlaps": ["/task-list", "/task-update"],
      "automation_level": "Medium",
      "description": "Organized archival of completed projects and tasks with summary generation",
      "implementation_type": "File management",
      "dependency_count": 1,
      "security_relevant": false
    },
    {
      "command": "/task-create",
      "category": "Task Management",
      "complexity": 3,
      "usage_frequency": "Daily",
      "primary_function": "Project and subtask creation",
      "technologies": ["Git", "Markdown", "Branch management"],
      "overlaps": ["/plan", "/task-update", "/task-list"],
      "automation_level": "High",
      "description": "Structured task creation with git branch management and template generation",
      "implementation_type": "Template framework",
      "dependency_count": 2,
      "security_relevant": false
    },
    {
      "command": "/task-list",
      "category": "Task Management",
      "complexity": 2,
      "usage_frequency": "Daily",
      "primary_function": "Task listing and filtering",
      "technologies": ["Markdown", "File system"],
      "overlaps": ["/task-show", "/task-search"],
      "automation_level": "Medium",
      "description": "Hierarchical task display with filtering and progress tracking",
      "implementation_type": "Display framework",
      "dependency_count": 1,
      "security_relevant": false
    },
    {
      "command": "/task-log",
      "category": "Task Management",
      "complexity": 2,
      "usage_frequency": "Daily",
      "primary_function": "Progress logging for tasks",
      "technologies": ["Markdown", "Timestamps"],
      "overlaps": ["/task-update", "/task-show"],
      "automation_level": "Medium",
      "description": "Timestamped progress logging with smart status suggestions",
      "implementation_type": "Logging framework",
      "dependency_count": 1,
      "security_relevant": false
    },
    {
      "command": "/task-search",
      "category": "Task Management",
      "complexity": 3,
      "usage_frequency": "Daily",
      "primary_function": "Task search and discovery",
      "technologies": ["Text search", "Markdown", "File system"],
      "overlaps": ["/task-list", "/task-show"],
      "automation_level": "Medium",
      "description": "Content and name-based task search with relevance ranking",
      "implementation_type": "Search framework",
      "dependency_count": 2,
      "security_relevant": false
    },
    {
      "command": "/task-show",
      "category": "Task Management",
      "complexity": 2,
      "usage_frequency": "Daily",
      "primary_function": "Detailed task information display",
      "technologies": ["Markdown", "File system"],
      "overlaps": ["/task-list", "/task-log"],
      "automation_level": "Low",
      "description": "Comprehensive task and project detail viewer with contextual suggestions",
      "implementation_type": "Display framework",
      "dependency_count": 1,
      "security_relevant": false
    },
    {
      "command": "/task-update",
      "category": "Task Management",
      "complexity": 3,
      "usage_frequency": "Daily",
      "primary_function": "Task status and metadata updates",
      "technologies": ["Markdown", "File system", "Progress calculation"],
      "overlaps": ["/task-log", "/task-show", "/plan"],
      "automation_level": "High",
      "description": "Status management with automatic progress calculation and sync",
      "implementation_type": "Update framework",
      "dependency_count": 2,
      "security_relevant": false
    },
    {
      "command": "/terraform-validate",
      "category": "Infrastructure",
      "complexity": 2,
      "usage_frequency": "Daily",
      "primary_function": "Basic Terraform validation",
      "technologies": ["Terraform"],
      "overlaps": ["/tf-flow", "/tf-pre-commit", "/validate"],
      "automation_level": "Low",
      "description": "Simple Terraform syntax and configuration validation",
      "implementation_type": "Command wrapper",
      "dependency_count": 1,
      "security_relevant": false
    },
    {
      "command": "/tf-apply",
      "category": "Infrastructure",
      "complexity": 3,
      "usage_frequency": "Daily",
      "primary_function": "Automated Terraform deployment",
      "technologies": ["Terraform"],
      "overlaps": ["/tf-flow", "/deploy"],
      "automation_level": "High",
      "description": "Safe Terraform deployment with pre-checks and post-validation",
      "implementation_type": "Deployment workflow",
      "dependency_count": 1,
      "security_relevant": true
    },
    {
      "command": "/tf-destroy",
      "category": "Infrastructure",
      "complexity": 3,
      "usage_frequency": "Weekly",
      "primary_function": "Safe Terraform destruction",
      "technologies": ["Terraform"],
      "overlaps": ["/tf-apply"],
      "automation_level": "High",
      "description": "Automated infrastructure destruction with safety checks and warnings",
      "implementation_type": "Destruction workflow",
      "dependency_count": 1,
      "security_relevant": true
    },
    {
      "command": "/tf-flow",
      "category": "Infrastructure",
      "complexity": 3,
      "usage_frequency": "Daily",
      "primary_function": "Complete Terraform workflow",
      "technologies": ["Terraform"],
      "overlaps": ["/terraform-validate", "/tf-apply", "/tf-pre-commit"],
      "automation_level": "High",
      "description": "Comprehensive Terraform workflow with format, validate, and plan",
      "implementation_type": "Workflow orchestrator",
      "dependency_count": 1,
      "security_relevant": false
    },
    {
      "command": "/tf-pre-commit",
      "category": "CI/CD Infrastructure",
      "complexity": 4,
      "usage_frequency": "Daily",
      "primary_function": "Pre-commit validation for Terraform",
      "technologies": ["Pre-commit", "Terraform", "TFLint", "Checkov"],
      "overlaps": ["/validate", "/security-audit", "/tf-flow"],
      "automation_level": "High",
      "description": "Comprehensive pre-commit validation with security scanning and formatting",
      "implementation_type": "Hook framework",
      "dependency_count": 8,
      "security_relevant": true
    },
    {
      "command": "/tf-security-scan",
      "category": "Security",
      "complexity": 4,
      "usage_frequency": "Daily",
      "primary_function": "Terraform security scanning",
      "technologies": ["Wiz", "Checkov", "TFSec", "Terraform"],
      "overlaps": ["/security-audit", "/tf-pre-commit", "/harden"],
      "automation_level": "High",
      "description": "Advanced Terraform security scanning with enterprise integrations",
      "implementation_type": "Security scanner",
      "dependency_count": 6,
      "security_relevant": true
    },
    {
      "command": "/validate",
      "category": "Development Support",
      "complexity": 4,
      "usage_frequency": "Daily",
      "primary_function": "Multi-language comprehensive validation",
      "technologies": ["Java", "Go", "Rust", "TypeScript", "Kubernetes", "Terraform"],
      "overlaps": ["/terraform-validate", "/debug", "/security-audit"],
      "automation_level": "High",
      "description": "Language-agnostic validation framework with detailed reporting",
      "implementation_type": "Multi-validator",
      "dependency_count": 12,
      "security_relevant": true
    }
  ],
  "analysis_summary": {
    "categories": {
      "Infrastructure": 8,
      "Task Management": 7,
      "Security": 4,
      "Operations": 4,
      "CI/CD Infrastructure": 4,
      "Development Support": 3,
      "Performance Analysis": 2
    },
    "complexity_distribution": {
      "Low (1-2)": 5,
      "Medium (3)": 11,
      "High (4)": 11,
      "Very High (5)": 4
    },
    "usage_frequency": {
      "Daily": 17,
      "Weekly": 12,
      "Monthly": 2
    },
    "automation_levels": {
      "Low": 1,
      "Medium": 6,
      "High": 19,
      "Very High": 5
    },
    "security_relevance": {
      "Security-relevant": 12,
      "Non-security": 19
    },
    "key_overlaps": [
      {
        "cluster": "Terraform Workflow",
        "commands": ["/terraform-validate", "/tf-flow", "/tf-apply", "/tf-destroy", "/tf-pre-commit", "/tf-security-scan"],
        "overlap_score": "High"
      },
      {
        "cluster": "Task Management",
        "commands": ["/task-create", "/task-update", "/task-list", "/task-show", "/task-log", "/task-search", "/task-archive"],
        "overlap_score": "Very High"
      },
      {
        "cluster": "Monitoring & Observability",
        "commands": ["/monitor", "/monitor-setup", "/log-trace", "/incident-response"],
        "overlap_score": "High"
      },
      {
        "cluster": "Security Suite",
        "commands": ["/security-audit", "/harden", "/tf-security-scan"],
        "overlap_score": "Medium"
      },
      {
        "cluster": "Performance Analysis",
        "commands": ["/benchmark", "/optimize", "/pipeline-optimize"],
        "overlap_score": "Medium"
      }
    ],
    "recommendations": {
      "consolidation_opportunities": [
        "Terraform commands could share common validation logic",
        "Task management commands form a coherent suite",
        "Security commands could benefit from unified reporting"
      ],
      "usage_optimization": [
        "Daily-use commands should be optimized for speed",
        "High-complexity commands need better documentation",
        "Security-relevant commands need audit logging"
      ],
      "architectural_improvements": [
        "Shared libraries for common functionality",
        "Plugin architecture for extensibility",
        "Configuration management for command defaults"
      ]
    }
  }
}