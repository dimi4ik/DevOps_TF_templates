# outputs.tf - Strukturierte Output-Werte
# Template für DevOps Terraform Projekte

# ================================================
# PROJEKT-INFORMATIONEN
# ================================================

output "project_info" {
  description = "Projekt-Grundinformationen"
  value = {
    name         = var.project_name
    environment  = var.environment
    timestamp    = local.timestamp
    deployment_region = var.azure_location
  }
}

output "resource_naming" {
  description = "Verwendete Naming-Convention"
  value = {
    prefix      = local.name_prefix
    pattern     = "${var.project_name}-${var.environment}-<resource>-<purpose>"
    example     = "${local.name_prefix}-vm-controller"
  }
}

# ================================================
# AZURE RESOURCE GROUP
# ================================================

output "resource_group" {
  description = "Azure Resource Group Informationen"
  value = var.cloud_provider == "azure" ? {
    name     = azurerm_resource_group.main[0].name
    location = azurerm_resource_group.main[0].location
    id       = azurerm_resource_group.main[0].id
    tags     = azurerm_resource_group.main[0].tags
  } : null
}

# ================================================
# NETZWERK-OUTPUTS
# ================================================

output "networking" {
  description = "Netzwerk-Konfiguration und Ressourcen"
  value = {
    vnet_id         = module.networking.vnet_id
    vnet_name       = module.networking.vnet_name
    vnet_cidr       = var.vnet_cidr
    subnet_ids      = module.networking.subnet_ids
    subnet_names    = module.networking.subnet_names
    subnet_cidrs    = var.subnet_cidrs
  }
  sensitive = false
}

output "network_security" {
  description = "Network Security Group Informationen"
  value = {
    nsg_ids           = module.networking.nsg_ids
    security_rules    = module.networking.security_rules_summary
    allowed_ports     = module.networking.allowed_ports
  }
  sensitive = false
}

# ================================================
# CITRIX INFRASTRUCTURE OUTPUTS
# ================================================

output "citrix_controllers" {
  description = "Citrix Controller VMs Informationen"
  value = {
    vm_names        = module.citrix_infrastructure.vm_names
    vm_ids          = module.citrix_infrastructure.vm_ids
    private_ips     = module.citrix_infrastructure.private_ips
    vm_count        = var.citrix_controller_count
    vm_size         = var.citrix_controller_size
    citrix_version  = var.citrix_version
  }
  sensitive = false
}

output "citrix_load_balancer" {
  description = "Load Balancer für Citrix Services"
  value = {
    lb_public_ip    = module.citrix_infrastructure.lb_public_ip
    lb_fqdn         = module.citrix_infrastructure.lb_fqdn
    backend_pool    = module.citrix_infrastructure.backend_pool_name
    health_probe    = module.citrix_infrastructure.health_probe_name
  }
  sensitive = false
}

# ================================================
# SICHERHEITS-OUTPUTS
# ================================================

output "security_configuration" {
  description = "Sicherheits-Konfiguration und Policies"
  value = {
    key_vault_id              = module.security.key_vault_id
    key_vault_uri             = module.security.key_vault_uri
    managed_identity_id       = module.security.managed_identity_id
    backup_vault_name         = module.security.backup_vault_name
    security_policies_applied = module.security.applied_policies
  }
  sensitive = false
}

output "monitoring_configuration" {
  description = "Monitoring und Logging Konfiguration"
  value = var.enable_monitoring ? {
    log_analytics_workspace_id   = module.security.log_analytics_workspace_id
    log_analytics_workspace_name = module.security.log_analytics_workspace_name
    application_insights_id      = module.security.application_insights_id
    diagnostic_settings_enabled  = module.security.diagnostic_settings
  } : null
}

# ================================================
# VERBINDUNGS-INFORMATIONEN
# ================================================

output "connection_details" {
  description = "Verbindungsdetails für Management und Zugriff"
  value = {
    # Public Endpoints
    citrix_public_url    = "https://${module.citrix_infrastructure.lb_fqdn}"
    management_portal    = "https://${module.citrix_infrastructure.lb_fqdn}/Director"
    
    # Internal Access
    admin_username       = var.admin_username
    domain_join_status   = var.domain_join != "" ? "Configured" : "Standalone"
    
    # Management IPs (für Firewall-Konfiguration)
    allowed_management_cidrs = var.allowed_management_ips
    
    # Service Ports
    citrix_services = {
      "Citrix XML Service"     = "80, 443"
      "Citrix ICA/HDX"        = "1494, 2598"
      "Citrix Session Sharing" = "2513"
      "Citrix CGP"            = "2512"
    }
  }
  sensitive = false
}

# ================================================
# KOSTEN-TRACKING UND TAGS
# ================================================

output "cost_tracking" {
  description = "Informationen für Kosten-Tracking und Billing"
  value = {
    cost_center           = var.cost_center
    project_owner         = var.owner
    resource_purpose      = var.resource_purpose
    environment          = var.environment
    estimated_monthly_cost = module.citrix_infrastructure.estimated_cost
    
    # Resource Counts für Billing
    resource_counts = {
      virtual_machines    = var.citrix_controller_count
      storage_accounts   = module.citrix_infrastructure.storage_account_count
      network_interfaces = module.citrix_infrastructure.network_interface_count
      public_ips         = module.citrix_infrastructure.public_ip_count
    }
  }
}

output "applied_tags" {
  description = "Angewendete Tags auf alle Ressourcen"
  value = local.common_tags
}

# ================================================
# DEPLOYMENT-INFORMATIONEN
# ================================================

output "deployment_info" {
  description = "Deployment-Status und -Informationen"
  value = {
    terraform_version    = "1.0+"
    deployment_timestamp = timestamp()
    repository_url       = var.repository_url
    deployment_region    = var.azure_location
    
    # Provider Versions
    provider_versions = {
      azurerm = "~> 3.0"
      vsphere = "~> 2.0"
      random  = "~> 3.0"
    }
    
    # Compliance Status
    compliance_checks = {
      backup_enabled      = var.enable_backup
      monitoring_enabled  = var.enable_monitoring
      auto_shutdown      = var.enable_auto_shutdown && var.environment != "prod"
      domain_joined      = var.domain_join != ""
    }
  }
}

# ================================================
# TROUBLESHOOTING UND SUPPORT
# ================================================

output "support_information" {
  description = "Informationen für Support und Troubleshooting"
  value = {
    # Log-Locations
    diagnostic_logs = var.enable_monitoring ? {
      vm_logs              = "/subscriptions/${data.azurerm_client_config.current.subscription_id}/resourceGroups/${azurerm_resource_group.main[0].name}/providers/Microsoft.Compute/virtualMachines"
      network_logs         = "/subscriptions/${data.azurerm_client_config.current.subscription_id}/resourceGroups/${azurerm_resource_group.main[0].name}/providers/Microsoft.Network"
      security_logs        = module.security.security_log_location
    } : "Monitoring nicht aktiviert"
    
    # Common Commands für Troubleshooting
    useful_commands = {
      "Check VM Status" = "az vm list --resource-group ${var.cloud_provider == "azure" ? azurerm_resource_group.main[0].name : "N/A"} --output table"
      "View Network Rules" = "az network nsg rule list --resource-group ${var.cloud_provider == "azure" ? azurerm_resource_group.main[0].name : "N/A"} --nsg-name ${local.name_prefix}-nsg"
      "Check Backup Status" = var.enable_backup ? "az backup job list --resource-group ${var.cloud_provider == "azure" ? azurerm_resource_group.main[0].name : "N/A"}" : "Backup nicht aktiviert"
    }
    
    # Support Contacts
    support_contacts = {
      infrastructure_team = var.owner
      project_lead       = "Siehe Repository: ${var.repository_url}"
      emergency_contact  = "IT-Operations Hotline"
    }
  }
}

# Data source für aktuelle Azure-Konfiguration
data "azurerm_client_config" "current" {
  count = var.cloud_provider == "azure" ? 1 : 0
}